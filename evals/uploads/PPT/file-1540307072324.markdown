title: C 语言圣战
author:
  name: LI YANG
  url: http://mooc1.chaoxing.com/course/88110757.html
output: 00-C-fight.html

--
# C语言圣战
## Story of C Language

# C语言圣战
## Story of C Language

---  
### 和Borland的缘由
1. SideKick
2. TurboPascal

---  
### TurboPascal的故事
PhilippeKahn、Anders`TurboPascal编译器`


---  
### MicrosoftPascal & TurboBasic
`Microsoft Pascal` vs `TurboBasic`

---  
### TurboC
Borland `TurboC编译器`

---  
### C语言历程
1. `ZortechC/C++`
2. `TurboC/C++1.0`
3. `TurboC/C++2.0`
4. `MicrosoftC/C++6.0`
5. `BC++3.0`

---  
### BC++3.0
1. `第一个在Window下的稳定的图形整合发展环境`
2. `最佳化程序代码` 
3. `几乎所有的公用程序和驱动程序都是BC++3.0写的`

**Framework**: WhiteWater公司(OWL的源流)




---  
### C/C++的光荣战役

1992年Borland推出了以`OWL1.0(ObjectWindowLibrary)`为核心`BC++3.1`进入巅峰的时期。 

1. `市场占有率超过了50%`
2. `全世界第三大的软件公司`
3. `Windows版的Pascal`


---  
### Borland的没落
**最主要的原因**: Philippe vs EugeneWang

EugeneWang`中国人`  
1. 完整封装WindowsAPI   
2. 计划以OWL为核心，开发可视化组件的开发工具  


---  
### Microsoft VisualC/C++崛起
**MicrosoftVisualC/C++1.0**（研发小组60%的成员是从Borland挖来的）
1. 编译器非常出色  
2. 在整合发展环境方面更大幅领先了BC++3.1  
3. 自动产生MFC的程序代码  


---  
### BC++的反击
**Borland的优势：**    
1. VC的最佳化编译器仍然落后BC3.1  
2. MFC仍然没有完整的封装WindowAPI
3. VC没有很好的封装数据结构ContainerClass，而BC却有非常好用的BIDS类别库。  
4. 最重要的是BC3.1仍然拥有绝大的市场

**Borland失败的原因：**   
1. 失去了许多的人材，EugeneWang也离开了;  
2. 近3年的时间之内，几乎没有持续的开发;  
3. 这么短的时间内决定全新发展整合开发环境;  
4. 把OWL完全重写；  
5. 大幅修改最佳化编译器；  
6. VBX让16位和32位的程序能够同时使用16位。  

---  
### 痛失江山的BC++4.0
**BC4实在太差了**  
1. 整合发展环境方面-bug太多，容易当掉而且反应速度缓慢  
2. 编译器方面，产生错误的编译程序代码  
3. OWL方面-采用全新的多重继承架构，和BC++3.1中的OWL不兼容，无法升级C/C++项目  
4. 采用在16/32位都能使用VBX的技术，造成一些VBX无法顺利的在BC++4.0中使用  
5. OWL2.0做了从基本架构的改变，导致程序升级代价太大    



---  
### 流失的市场
**在BC++4.0失利的后果：**
1. 首先是C++市场被VC迅速抢占。    
2. 公用程序市场和驱动程序市场也开始转换到VC。  
3. 应用程序市场也转为使用VC来写应用程序。  

Borland在3个主要的应用市场接连败退，C/C++的江山注定将易主，其势已不可挽。

---  
### Borland C/C++，VisualC/C++，WatcomC/C++和SymantecC/C++的缠斗
1. `Borland C/C++`
2. `VisualC/C++`   
3. `WatcomC/C++`  
4. `SymantecC/C++`  


---  
### SymantecC/C++的发展史
**SymantecC/C++**  
`ThinkC/C++` -> `ZortechC/C++` -> `SymantecC/C++`(EugeneWang)

---  
### WatcomC/C++的发展史

`WatcomC/C++`（WC）: 世界最好的最佳化程序代码

`BC/VC/SC` with `WatcomC/C++`


---  
### PharLap公司
`Andrew Schulman`（首席工程师）： 《Undocumented Windows》  
`Matt Pietrek`：《Windows Internals》；`SoftIce`，`BoundsChecker`。`Turbo Debugger小组`  

---  
### 关键的时刻 - MFC Or OWL

- 无法在短时间内完成`C/C++Framework`   
- `MFC` or `OWL`
- 和Microsoft签约`LicenseMFC`


---  
### OLE的搅局

- 在1994年Microsoft推出了OLE技术(对抗Apple file/IBM OS2的Workplace)。  
- 可以让Window平台的文件内嵌在不同的应用程序中并且让文件在其他应用中编辑`In-PlaceEditing`  


1. Borland无法立刻实现  
2. Symantec和Watcom的License是MFC1.x的版本,而OLE功能是在MFC2.0中实现的


对于OLE这个关键技术的影响，Borland是深知在心的，因此在计划在BC4.5的OWL2.5中支持OLE。当时Borland推出的解决方案便是OCF(Object Component Framework)。

**Borland计划在BC4.5的OWL2.5中支持OLE,推出方案OCF** `Object Component Framework`:   
1. 如何能够使得OLE琐碎、复杂的接口能够单纯化;  
2. 如何能够使得OLE在窗口环境下写程序的思考方式一致化「事件驱动」。  
3. 如何能够使Borland的产品具备OLE的功能。  
4. 如何能够C++程序员都能够享受OLE的功能而不局限于OWL的程序员。  

---  
### C/C++开发工具的最后圣战
1995初Borland在痛定思痛之后，终于清除了BC++4.0中所有的问题，也开发出了自BC++3.1以来最稳定，最快速的BC++4.5的版，准备和Microsoft决一死战。

- `Symantec C/C++7.x` MFC1.x
- `Watcom C/C++`  MFC1.x
- `Borland C/C++4.5` OCF
- `Microsoft C/C++5.0` MFC2.x OLE

---  
### IBM VisualC/C++

IBM VisualAgeC++3.0 (1995) `乌龟爬`

---  
### 快速殒落的潜力之星－Sybase的C/C++RAD工具Optima++
**Optima++** `1996`  
- 结合了Watcom的最佳化编译器  
- 组件拖曳开发环境  
- 组件架构(类似Delphi的VCL)完全是以纯正的C/C++程序代码撰写的  

**问题和缺陷**     
- Optima++在1.5推出之后停止发行新版本  
- 最大的中文问题没有解决  

